// Code generated by protoc-gen-go. DO NOT EDIT.
// source: TwitterPage/twitter.proto

package TwitterPage

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddUserRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password1            string   `protobuf:"bytes,2,opt,name=password1,proto3" json:"password1,omitempty"`
	Password2            string   `protobuf:"bytes,3,opt,name=password2,proto3" json:"password2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddUserRequest) Reset()         { *m = AddUserRequest{} }
func (m *AddUserRequest) String() string { return proto.CompactTextString(m) }
func (*AddUserRequest) ProtoMessage()    {}
func (*AddUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a025462318c64372, []int{0}
}

func (m *AddUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUserRequest.Unmarshal(m, b)
}
func (m *AddUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUserRequest.Marshal(b, m, deterministic)
}
func (m *AddUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUserRequest.Merge(m, src)
}
func (m *AddUserRequest) XXX_Size() int {
	return xxx_messageInfo_AddUserRequest.Size(m)
}
func (m *AddUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddUserRequest proto.InternalMessageInfo

func (m *AddUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AddUserRequest) GetPassword1() string {
	if m != nil {
		return m.Password1
	}
	return ""
}

func (m *AddUserRequest) GetPassword2() string {
	if m != nil {
		return m.Password2
	}
	return ""
}

type BoolReply struct {
	T                    bool     `protobuf:"varint,1,opt,name=t,proto3" json:"t,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BoolReply) Reset()         { *m = BoolReply{} }
func (m *BoolReply) String() string { return proto.CompactTextString(m) }
func (*BoolReply) ProtoMessage()    {}
func (*BoolReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a025462318c64372, []int{1}
}

func (m *BoolReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BoolReply.Unmarshal(m, b)
}
func (m *BoolReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BoolReply.Marshal(b, m, deterministic)
}
func (m *BoolReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BoolReply.Merge(m, src)
}
func (m *BoolReply) XXX_Size() int {
	return xxx_messageInfo_BoolReply.Size(m)
}
func (m *BoolReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BoolReply.DiscardUnknown(m)
}

var xxx_messageInfo_BoolReply proto.InternalMessageInfo

func (m *BoolReply) GetT() bool {
	if m != nil {
		return m.T
	}
	return false
}

type HasUserRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HasUserRequest) Reset()         { *m = HasUserRequest{} }
func (m *HasUserRequest) String() string { return proto.CompactTextString(m) }
func (*HasUserRequest) ProtoMessage()    {}
func (*HasUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a025462318c64372, []int{2}
}

func (m *HasUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasUserRequest.Unmarshal(m, b)
}
func (m *HasUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasUserRequest.Marshal(b, m, deterministic)
}
func (m *HasUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasUserRequest.Merge(m, src)
}
func (m *HasUserRequest) XXX_Size() int {
	return xxx_messageInfo_HasUserRequest.Size(m)
}
func (m *HasUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HasUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HasUserRequest proto.InternalMessageInfo

func (m *HasUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *HasUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type User struct {
	UserName             string       `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	PassWord             string       `protobuf:"bytes,2,opt,name=passWord,proto3" json:"passWord,omitempty"`
	Posts                []*TwitPosts `protobuf:"bytes,3,rep,name=Posts,proto3" json:"Posts,omitempty"`
	Following            []string     `protobuf:"bytes,4,rep,name=Following,proto3" json:"Following,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_a025462318c64372, []int{3}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *User) GetPassWord() string {
	if m != nil {
		return m.PassWord
	}
	return ""
}

func (m *User) GetPosts() []*TwitPosts {
	if m != nil {
		return m.Posts
	}
	return nil
}

func (m *User) GetFollowing() []string {
	if m != nil {
		return m.Following
	}
	return nil
}

type TwitPosts struct {
	Contents             string   `protobuf:"bytes,1,opt,name=Contents,proto3" json:"Contents,omitempty"`
	Date                 int64    `protobuf:"varint,2,opt,name=Date,proto3" json:"Date,omitempty"`
	User                 string   `protobuf:"bytes,3,opt,name=User,proto3" json:"User,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TwitPosts) Reset()         { *m = TwitPosts{} }
func (m *TwitPosts) String() string { return proto.CompactTextString(m) }
func (*TwitPosts) ProtoMessage()    {}
func (*TwitPosts) Descriptor() ([]byte, []int) {
	return fileDescriptor_a025462318c64372, []int{4}
}

func (m *TwitPosts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TwitPosts.Unmarshal(m, b)
}
func (m *TwitPosts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TwitPosts.Marshal(b, m, deterministic)
}
func (m *TwitPosts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TwitPosts.Merge(m, src)
}
func (m *TwitPosts) XXX_Size() int {
	return xxx_messageInfo_TwitPosts.Size(m)
}
func (m *TwitPosts) XXX_DiscardUnknown() {
	xxx_messageInfo_TwitPosts.DiscardUnknown(m)
}

var xxx_messageInfo_TwitPosts proto.InternalMessageInfo

func (m *TwitPosts) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

func (m *TwitPosts) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *TwitPosts) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type GetUserRequest struct {
	Uname                string   `protobuf:"bytes,1,opt,name=uname,proto3" json:"uname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserRequest) Reset()         { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()    {}
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a025462318c64372, []int{5}
}

func (m *GetUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserRequest.Unmarshal(m, b)
}
func (m *GetUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserRequest.Marshal(b, m, deterministic)
}
func (m *GetUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserRequest.Merge(m, src)
}
func (m *GetUserRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserRequest.Size(m)
}
func (m *GetUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserRequest proto.InternalMessageInfo

func (m *GetUserRequest) GetUname() string {
	if m != nil {
		return m.Uname
	}
	return ""
}

type GetUserReply struct {
	Userinfo             *User    `protobuf:"bytes,1,opt,name=Userinfo,proto3" json:"Userinfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserReply) Reset()         { *m = GetUserReply{} }
func (m *GetUserReply) String() string { return proto.CompactTextString(m) }
func (*GetUserReply) ProtoMessage()    {}
func (*GetUserReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a025462318c64372, []int{6}
}

func (m *GetUserReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserReply.Unmarshal(m, b)
}
func (m *GetUserReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserReply.Marshal(b, m, deterministic)
}
func (m *GetUserReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserReply.Merge(m, src)
}
func (m *GetUserReply) XXX_Size() int {
	return xxx_messageInfo_GetUserReply.Size(m)
}
func (m *GetUserReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserReply proto.InternalMessageInfo

func (m *GetUserReply) GetUserinfo() *User {
	if m != nil {
		return m.Userinfo
	}
	return nil
}

type UpdateUserRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Usr                  *User    `protobuf:"bytes,2,opt,name=usr,proto3" json:"usr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserRequest) Reset()         { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()    {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a025462318c64372, []int{7}
}

func (m *UpdateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest.Unmarshal(m, b)
}
func (m *UpdateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest.Marshal(b, m, deterministic)
}
func (m *UpdateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest.Merge(m, src)
}
func (m *UpdateUserRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest.Size(m)
}
func (m *UpdateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest proto.InternalMessageInfo

func (m *UpdateUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UpdateUserRequest) GetUsr() *User {
	if m != nil {
		return m.Usr
	}
	return nil
}

type GetTwitterPageRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTwitterPageRequest) Reset()         { *m = GetTwitterPageRequest{} }
func (m *GetTwitterPageRequest) String() string { return proto.CompactTextString(m) }
func (*GetTwitterPageRequest) ProtoMessage()    {}
func (*GetTwitterPageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a025462318c64372, []int{8}
}

func (m *GetTwitterPageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTwitterPageRequest.Unmarshal(m, b)
}
func (m *GetTwitterPageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTwitterPageRequest.Marshal(b, m, deterministic)
}
func (m *GetTwitterPageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTwitterPageRequest.Merge(m, src)
}
func (m *GetTwitterPageRequest) XXX_Size() int {
	return xxx_messageInfo_GetTwitterPageRequest.Size(m)
}
func (m *GetTwitterPageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTwitterPageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTwitterPageRequest proto.InternalMessageInfo

func (m *GetTwitterPageRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type TwitterPage struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	UnFollowed           []string `protobuf:"bytes,2,rep,name=unFollowed,proto3" json:"unFollowed,omitempty"`
	Following            []string `protobuf:"bytes,3,rep,name=Following,proto3" json:"Following,omitempty"`
	Posts                []string `protobuf:"bytes,4,rep,name=Posts,proto3" json:"Posts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TwitterPage) Reset()         { *m = TwitterPage{} }
func (m *TwitterPage) String() string { return proto.CompactTextString(m) }
func (*TwitterPage) ProtoMessage()    {}
func (*TwitterPage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a025462318c64372, []int{9}
}

func (m *TwitterPage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TwitterPage.Unmarshal(m, b)
}
func (m *TwitterPage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TwitterPage.Marshal(b, m, deterministic)
}
func (m *TwitterPage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TwitterPage.Merge(m, src)
}
func (m *TwitterPage) XXX_Size() int {
	return xxx_messageInfo_TwitterPage.Size(m)
}
func (m *TwitterPage) XXX_DiscardUnknown() {
	xxx_messageInfo_TwitterPage.DiscardUnknown(m)
}

var xxx_messageInfo_TwitterPage proto.InternalMessageInfo

func (m *TwitterPage) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *TwitterPage) GetUnFollowed() []string {
	if m != nil {
		return m.UnFollowed
	}
	return nil
}

func (m *TwitterPage) GetFollowing() []string {
	if m != nil {
		return m.Following
	}
	return nil
}

func (m *TwitterPage) GetPosts() []string {
	if m != nil {
		return m.Posts
	}
	return nil
}

type GetTwitterPageReply struct {
	Twit                 *TwitterPage `protobuf:"bytes,1,opt,name=twit,proto3" json:"twit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetTwitterPageReply) Reset()         { *m = GetTwitterPageReply{} }
func (m *GetTwitterPageReply) String() string { return proto.CompactTextString(m) }
func (*GetTwitterPageReply) ProtoMessage()    {}
func (*GetTwitterPageReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a025462318c64372, []int{10}
}

func (m *GetTwitterPageReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTwitterPageReply.Unmarshal(m, b)
}
func (m *GetTwitterPageReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTwitterPageReply.Marshal(b, m, deterministic)
}
func (m *GetTwitterPageReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTwitterPageReply.Merge(m, src)
}
func (m *GetTwitterPageReply) XXX_Size() int {
	return xxx_messageInfo_GetTwitterPageReply.Size(m)
}
func (m *GetTwitterPageReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTwitterPageReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetTwitterPageReply proto.InternalMessageInfo

func (m *GetTwitterPageReply) GetTwit() *TwitterPage {
	if m != nil {
		return m.Twit
	}
	return nil
}

type FollowUserRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Othername            string   `protobuf:"bytes,2,opt,name=othername,proto3" json:"othername,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FollowUserRequest) Reset()         { *m = FollowUserRequest{} }
func (m *FollowUserRequest) String() string { return proto.CompactTextString(m) }
func (*FollowUserRequest) ProtoMessage()    {}
func (*FollowUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a025462318c64372, []int{11}
}

func (m *FollowUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FollowUserRequest.Unmarshal(m, b)
}
func (m *FollowUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FollowUserRequest.Marshal(b, m, deterministic)
}
func (m *FollowUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FollowUserRequest.Merge(m, src)
}
func (m *FollowUserRequest) XXX_Size() int {
	return xxx_messageInfo_FollowUserRequest.Size(m)
}
func (m *FollowUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FollowUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FollowUserRequest proto.InternalMessageInfo

func (m *FollowUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *FollowUserRequest) GetOthername() string {
	if m != nil {
		return m.Othername
	}
	return ""
}

func init() {
	proto.RegisterType((*AddUserRequest)(nil), "TwitterPage.AddUserRequest")
	proto.RegisterType((*BoolReply)(nil), "TwitterPage.BoolReply")
	proto.RegisterType((*HasUserRequest)(nil), "TwitterPage.HasUserRequest")
	proto.RegisterType((*User)(nil), "TwitterPage.User")
	proto.RegisterType((*TwitPosts)(nil), "TwitterPage.TwitPosts")
	proto.RegisterType((*GetUserRequest)(nil), "TwitterPage.GetUserRequest")
	proto.RegisterType((*GetUserReply)(nil), "TwitterPage.GetUserReply")
	proto.RegisterType((*UpdateUserRequest)(nil), "TwitterPage.UpdateUserRequest")
	proto.RegisterType((*GetTwitterPageRequest)(nil), "TwitterPage.GetTwitterPageRequest")
	proto.RegisterType((*TwitterPage)(nil), "TwitterPage.TwitterPage")
	proto.RegisterType((*GetTwitterPageReply)(nil), "TwitterPage.GetTwitterPageReply")
	proto.RegisterType((*FollowUserRequest)(nil), "TwitterPage.FollowUserRequest")
}

func init() { proto.RegisterFile("TwitterPage/twitter.proto", fileDescriptor_a025462318c64372) }

var fileDescriptor_a025462318c64372 = []byte{
	// 547 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xcf, 0x6f, 0xd3, 0x30,
	0x14, 0x26, 0x24, 0x63, 0xeb, 0x6b, 0x55, 0x51, 0xf3, 0x43, 0x69, 0x98, 0xa6, 0xca, 0x48, 0x68,
	0x87, 0x11, 0x44, 0x76, 0x46, 0x82, 0x16, 0x6d, 0xbd, 0x00, 0x55, 0xb4, 0x6a, 0xdc, 0x50, 0x4a,
	0x4d, 0x57, 0x29, 0x8b, 0x43, 0xec, 0xa8, 0x70, 0xe0, 0xc2, 0x91, 0xbf, 0x1a, 0x3d, 0x3b, 0x49,
	0x9d, 0x74, 0x8a, 0x8a, 0xc4, 0x29, 0x7e, 0x7e, 0x2f, 0x9f, 0x3f, 0x7f, 0xef, 0x7b, 0x86, 0xe1,
	0xd5, 0x66, 0x2d, 0x25, 0xcb, 0x66, 0xd1, 0x8a, 0xbd, 0x92, 0x7a, 0xed, 0xa7, 0x19, 0x97, 0x9c,
	0x74, 0x8d, 0x14, 0xbd, 0x81, 0xfe, 0xbb, 0xe5, 0x72, 0x2e, 0x58, 0x16, 0xb2, 0xef, 0x39, 0x13,
	0x92, 0x78, 0x70, 0x94, 0x0b, 0x96, 0x25, 0xd1, 0x2d, 0x73, 0xad, 0x91, 0x75, 0xda, 0x09, 0xab,
	0x98, 0x1c, 0x43, 0x27, 0x8d, 0x84, 0xd8, 0xf0, 0x6c, 0xf9, 0xda, 0xbd, 0xaf, 0x92, 0xdb, 0x0d,
	0x33, 0x1b, 0xb8, 0x76, 0x3d, 0x1b, 0xd0, 0x21, 0x74, 0xc6, 0x9c, 0xc7, 0x21, 0x4b, 0xe3, 0x9f,
	0xa4, 0x07, 0x96, 0x54, 0xe8, 0x47, 0xa1, 0x25, 0xe9, 0x14, 0xfa, 0xd3, 0x48, 0xec, 0x4b, 0xc2,
	0x83, 0xa3, 0x12, 0xb5, 0xe0, 0x50, 0xc5, 0xf4, 0x8f, 0x05, 0x0e, 0xe2, 0x60, 0x11, 0x7e, 0x3f,
	0x1a, 0x00, 0x65, 0x5c, 0x02, 0x5c, 0x37, 0x00, 0x30, 0x26, 0x67, 0x70, 0x30, 0xe3, 0x42, 0x0a,
	0xd7, 0x1e, 0xd9, 0xa7, 0xdd, 0xe0, 0xa9, 0x6f, 0x88, 0xa5, 0xd6, 0x2a, 0x1b, 0xea, 0x22, 0xbc,
	0xf1, 0x05, 0x8f, 0x63, 0xbe, 0x59, 0x27, 0x2b, 0xd7, 0x19, 0xd9, 0x78, 0xe3, 0x6a, 0x83, 0x7e,
	0x82, 0x4e, 0xf5, 0x07, 0x1e, 0x3a, 0xe1, 0x89, 0x64, 0x89, 0x14, 0x25, 0xa1, 0x32, 0x26, 0x04,
	0x9c, 0xf7, 0x91, 0x64, 0x8a, 0x8c, 0x1d, 0xaa, 0x35, 0xee, 0x21, 0xe1, 0x42, 0x47, 0xb5, 0xa6,
	0x2f, 0xa0, 0x7f, 0xc9, 0xa4, 0xa9, 0xd3, 0x63, 0x38, 0xc8, 0x0d, 0x91, 0x74, 0x40, 0xdf, 0x40,
	0xaf, 0xaa, 0x43, 0xb5, 0x5f, 0x6a, 0x31, 0xd6, 0xc9, 0x37, 0xae, 0x0a, 0xbb, 0xc1, 0xa0, 0x76,
	0x2f, 0x55, 0x59, 0x95, 0xd0, 0x2b, 0x18, 0xcc, 0xd3, 0x65, 0x24, 0xd9, 0xbe, 0x1d, 0x79, 0x0e,
	0x76, 0x2e, 0x32, 0x45, 0xff, 0x4e, 0x68, 0xcc, 0xd2, 0x73, 0x78, 0x72, 0xc9, 0xa4, 0x91, 0xdb,
	0x03, 0x99, 0xfe, 0x02, 0xd3, 0xad, 0xad, 0x24, 0x4e, 0x00, 0xf2, 0x44, 0x8b, 0xcf, 0xb0, 0xaf,
	0xd8, 0x0c, 0x63, 0xa7, 0xde, 0x2b, 0xbb, 0xd1, 0x2b, 0x14, 0x52, 0xf7, 0x5d, 0x77, 0x51, 0x07,
	0x74, 0x02, 0x8f, 0x9a, 0x9c, 0x51, 0xcf, 0x33, 0x70, 0x70, 0xa4, 0x0a, 0x2d, 0xdd, 0x1d, 0x8f,
	0x94, 0xc5, 0xaa, 0x8a, 0x7e, 0x80, 0x81, 0x3e, 0xe7, 0x1f, 0xa6, 0x8c, 0xcb, 0x9b, 0x22, 0x59,
	0x4c, 0x59, 0xb5, 0x11, 0xfc, 0x76, 0xc0, 0xbe, 0x66, 0x0b, 0xf2, 0x16, 0x0e, 0x8b, 0xc9, 0x25,
	0xcf, 0x6a, 0x0c, 0xea, 0xf3, 0xec, 0xd5, 0x2d, 0x5c, 0x8d, 0x20, 0xbd, 0x87, 0x08, 0xc5, 0xd8,
	0x35, 0x10, 0xea, 0xc3, 0xd8, 0x82, 0x30, 0x81, 0xc3, 0xc2, 0x68, 0x0d, 0x84, 0xba, 0x4d, 0xbd,
	0xe1, 0xdd, 0x49, 0x0d, 0x72, 0x01, 0xb0, 0xb5, 0x1b, 0x39, 0xa9, 0xdb, 0xa7, 0xe9, 0xc3, 0x16,
	0x32, 0x9f, 0xd5, 0x74, 0x98, 0x76, 0xa1, 0xcd, 0x63, 0x77, 0xdd, 0xe7, 0x8d, 0x5a, 0x6b, 0x2a,
	0x86, 0xdb, 0x0e, 0x36, 0x18, 0xee, 0xb4, 0xb6, 0x85, 0xe1, 0x14, 0x7a, 0xf3, 0xe4, 0x7f, 0x20,
	0x8d, 0x03, 0x38, 0x5e, 0x73, 0x7f, 0x95, 0xa5, 0x5f, 0x7d, 0xf6, 0x23, 0xba, 0x4d, 0x63, 0x26,
	0xfc, 0xe2, 0x95, 0xff, 0xb2, 0x61, 0x8b, 0xf1, 0x43, 0xe3, 0xc7, 0x19, 0xbe, 0xfa, 0x33, 0x6b,
	0xf1, 0x40, 0x3d, 0xff, 0xe7, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x83, 0x7b, 0x98, 0xe0, 0x1b,
	0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WebClient is the client API for Web service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WebClient interface {
	AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*BoolReply, error)
	HasUser(ctx context.Context, in *HasUserRequest, opts ...grpc.CallOption) (*BoolReply, error)
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserReply, error)
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*BoolReply, error)
	GetTwitterPage(ctx context.Context, in *GetTwitterPageRequest, opts ...grpc.CallOption) (*GetTwitterPageReply, error)
	FollowUser(ctx context.Context, in *FollowUserRequest, opts ...grpc.CallOption) (*BoolReply, error)
	UnFollowUser(ctx context.Context, in *FollowUserRequest, opts ...grpc.CallOption) (*BoolReply, error)
}

type webClient struct {
	cc *grpc.ClientConn
}

func NewWebClient(cc *grpc.ClientConn) WebClient {
	return &webClient{cc}
}

func (c *webClient) AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*BoolReply, error) {
	out := new(BoolReply)
	err := c.cc.Invoke(ctx, "/TwitterPage.Web/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webClient) HasUser(ctx context.Context, in *HasUserRequest, opts ...grpc.CallOption) (*BoolReply, error) {
	out := new(BoolReply)
	err := c.cc.Invoke(ctx, "/TwitterPage.Web/HasUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserReply, error) {
	out := new(GetUserReply)
	err := c.cc.Invoke(ctx, "/TwitterPage.Web/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*BoolReply, error) {
	out := new(BoolReply)
	err := c.cc.Invoke(ctx, "/TwitterPage.Web/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webClient) GetTwitterPage(ctx context.Context, in *GetTwitterPageRequest, opts ...grpc.CallOption) (*GetTwitterPageReply, error) {
	out := new(GetTwitterPageReply)
	err := c.cc.Invoke(ctx, "/TwitterPage.Web/GetTwitterPage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webClient) FollowUser(ctx context.Context, in *FollowUserRequest, opts ...grpc.CallOption) (*BoolReply, error) {
	out := new(BoolReply)
	err := c.cc.Invoke(ctx, "/TwitterPage.Web/FollowUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webClient) UnFollowUser(ctx context.Context, in *FollowUserRequest, opts ...grpc.CallOption) (*BoolReply, error) {
	out := new(BoolReply)
	err := c.cc.Invoke(ctx, "/TwitterPage.Web/UnFollowUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WebServer is the server API for Web service.
type WebServer interface {
	AddUser(context.Context, *AddUserRequest) (*BoolReply, error)
	HasUser(context.Context, *HasUserRequest) (*BoolReply, error)
	GetUser(context.Context, *GetUserRequest) (*GetUserReply, error)
	UpdateUser(context.Context, *UpdateUserRequest) (*BoolReply, error)
	GetTwitterPage(context.Context, *GetTwitterPageRequest) (*GetTwitterPageReply, error)
	FollowUser(context.Context, *FollowUserRequest) (*BoolReply, error)
	UnFollowUser(context.Context, *FollowUserRequest) (*BoolReply, error)
}

func RegisterWebServer(s *grpc.Server, srv WebServer) {
	s.RegisterService(&_Web_serviceDesc, srv)
}

func _Web_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TwitterPage.Web/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebServer).AddUser(ctx, req.(*AddUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Web_HasUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HasUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebServer).HasUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TwitterPage.Web/HasUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebServer).HasUser(ctx, req.(*HasUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Web_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TwitterPage.Web/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Web_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TwitterPage.Web/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Web_GetTwitterPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTwitterPageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebServer).GetTwitterPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TwitterPage.Web/GetTwitterPage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebServer).GetTwitterPage(ctx, req.(*GetTwitterPageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Web_FollowUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FollowUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebServer).FollowUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TwitterPage.Web/FollowUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebServer).FollowUser(ctx, req.(*FollowUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Web_UnFollowUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FollowUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebServer).UnFollowUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TwitterPage.Web/UnFollowUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebServer).UnFollowUser(ctx, req.(*FollowUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Web_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TwitterPage.Web",
	HandlerType: (*WebServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddUser",
			Handler:    _Web_AddUser_Handler,
		},
		{
			MethodName: "HasUser",
			Handler:    _Web_HasUser_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _Web_GetUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _Web_UpdateUser_Handler,
		},
		{
			MethodName: "GetTwitterPage",
			Handler:    _Web_GetTwitterPage_Handler,
		},
		{
			MethodName: "FollowUser",
			Handler:    _Web_FollowUser_Handler,
		},
		{
			MethodName: "UnFollowUser",
			Handler:    _Web_UnFollowUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "TwitterPage/twitter.proto",
}
